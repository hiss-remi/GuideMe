{"version":3,"sources":["Navigation.js","Releases.js","Home.js","documentation/Badges.js","documentation/data/XMLData.js","documentation/XMLDocumentation.js","App.js","index.js"],"names":["Navigation","Navbar","bg","expand","fixed","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","exact","to","Link","NavDropdown","title","Item","octokit","Octokit","require","bytesToHuman","size","i","Math","max","toFixed","Releases","props","state","releases","this","length","repos","listReleases","owner","repo","then","value","setState","data","map","release","releaseDate","Date","published_at","href","html_url","target","name","replace","draft","prerelease","toDateString","body","assets","asset","browser_download_url","download_count","Component","Home","Container","Jumbotron","Col","RequiredBadge","required","aria-label","MinVersionBadge","version","toString","DeprecatedBadge","deprecated","RemovedBadge","sharedTextUsage","textUsage","leftTextUsage","targetFormat","audioAttributes","format","description","buttonAttributes","removed","minVersion","globalButtonAttributes","XmlData","parents","min","usage","attributes","AttributesTable","Table","style","attr","idx","RequirementsTable","Row","xs","sm","md","lg","xl","bordered","node","SidebarNavLinks","sort","a","b","localeCompare","XMLDocumentation","location","window","includes","split","elem","document","getElementById","scrollIntoView","fluid","language","atomOneLight","NotFound","App","basename","process","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8d2ab2c8.chunk.js","sourcesContent":["import React from \"react\";\nimport {LinkContainer} from 'react-router-bootstrap'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\nexport default function Navigation() {\n  return (\n    <Navbar bg=\"dark\" expand=\"lg\" fixed=\"top\" variant=\"dark\">\n      <Navbar.Brand>GuideMe Documentation</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      <Navbar.Collapse id=\"top-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <LinkContainer exact to=\"/\">\n            <Nav.Link>Home</Nav.Link>\n          </LinkContainer>\n          <NavDropdown id=\"nav-dropdown-docs\" title=\"Documentation\">\n            <LinkContainer exact to=\"/docs/xml\">\n              <NavDropdown.Item>XML Tease Files</NavDropdown.Item>\n            </LinkContainer>\n            <LinkContainer exact to=\"/docs/js\">\n              <NavDropdown.Item>JavaScript Functionality</NavDropdown.Item>\n            </LinkContainer>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","/* eslint-disable react/jsx-no-target-blank */\nimport React, {Component} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst {Octokit} = require(\"@octokit/rest\")\nconst octokit = new Octokit();\n\nfunction bytesToHuman(size) {\n  let i = -1;\n  const sizeUnits = ['kB', 'MB', 'GB'];\n  do {\n    size = size / 1024;\n    i++;\n  } while (size > 1024);\n\n  return Math.max(size, 0.1).toFixed(1) + ' ' + sizeUnits[i];\n}\n\nexport default class Releases extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      releases: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.releases.length === 0) {\n      octokit.repos.listReleases({\n        owner: 'EroticDevelopment',\n        repo: 'GuideMe'\n      }).then(value => this.setState({\n        releases: value.data ?? []\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"display-4\">Application Releases</h1>\n        {this.state.releases.length === 0 ? <p className=\"h5\">Loading...</p> : this.state.releases.map(release => {\n          let releaseDate = new Date(release.published_at);\n          return (\n            <div key={release.id}>\n              <p className=\"mb-0 border-bottom\">\n                <a className=\"h1\" href={release.html_url} target=\"_blank\">\n                  {release.name.replace('Release ', '')}\n                </a>\n                {release.draft &&\n                <span className=\"ml-2 badge badge-danger align-text-top\">Draft</span>\n                }\n                {release.prerelease &&\n                <span className=\"ml-2 badge badge-warning align-text-top\">Prerelease</span>\n                }\n                <span className=\"h5 float-right mt-3\">{releaseDate.toDateString()}</span>\n              </p>\n              <ReactMarkdown>{release.body}</ReactMarkdown>\n              <h2>Assets</h2>\n              <ul>\n                {release.assets.map(asset => {\n                  return (\n                    <li key={asset.id}><a href={asset.browser_download_url}>{asset.name}</a> &ndash; <span\n                      className=\"small\">{bytesToHuman(asset.size)}</span> &ndash; <span\n                      className=\"small\">{asset.download_count} downloads</span></li>\n                  );\n                })}\n              </ul>\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {Col, Container, Jumbotron} from \"react-bootstrap\";\nimport Releases from \"./Releases\";\n\nexport default function Home() {\n    return (\n    <Container>\n        <Jumbotron className=\"pt-5\">\n            <Col className=\"mx-auto\">\n                <h1 className=\"display-3\">Welcome</h1>\n                <p className=\"lead\">\n                    This site will contain general information for the GuideMe application as well as the syntax\n                    of XML files and the overRide JavaScript functionality.\n                </p>\n                <p className=\"lead\">\n                    Click on one of the links up top to get started.\n                </p>\n            </Col>\n        </Jumbotron>\n        <Releases />\n    </Container>\n    )\n}","import React from \"react\";\n\nexport function RequiredBadge(props) {\n  return (props.required\n      ? <span className=\"badge d-inline badge-success\" aria-label=\"Required\" title=\"Required\">Required</span>\n      : <span className=\"badge d-inline badge-secondary\" aria-label=\"Optional\" title=\"Optional\">Optional</span>\n  );\n}\n\nexport function MinVersionBadge(props) {\n  return(props.version\n      ? <span className={props.className || \"badge badge-info d-inline ml-2 mb-1\"}\n              aria-label={\"Requires Version \" + props.version.toString()}\n              title={\"Requires Version \" + props.version.toString()}>&gt;= {props.version}</span>\n      : \"\"\n  );\n}\n\nexport function DeprecatedBadge(props) {\n  return(props.deprecated\n      ? <span className={props.className || \"badge badge-warning d-inline ml-2 mb-1\"}\n              aria-label=\"Deprecated\"\n              title=\"Deprecated\">Deprecated</span>\n      : \"\"\n  );\n}\n\nexport function RemovedBadge(props) {\n  return(props.version\n      ? <span className={props.className || \"badge badge-danger d-inline ml-2 mb-1\"}\n              aria-label={\"Removed in Version \" + props.version.toString()}\n              title={\"Removed in Version \" + props.version.toString()}>&lt; {props.version}</span>\n      : \"\"\n  );\n}\n","import React from \"react\";\nimport {MinVersionBadge, RemovedBadge, RequiredBadge} from \"../Badges\";\n\n//language=XML\nconst audioUsage = [\n  `<Audio id=\"music.mp3\" />`,\n  `<Audio id=\"music.mp3\" start-at=\"00:01:11\" stop-at=\"00:02:11\" onTriggered=\"audioP2()\" target=\"Page3\" loops=\"1\" if-set=\"flag1+flag2\" if-not-set=\"flag3\" />`\n];\n\n\n//language=XML\nconst audio2Usage = [\n  `<Audio2 id=\"music.mp3\" />`,\n  `<Audio2 id=\"music.mp3\" start-at=\"00:01:11\" stop-at=\"00:02:11\" onTriggered=\"audioP2()\" target=\"Page3\" loops=\"1\" if-set=\"flag1+flag2\" if-not-set=\"flag3\" />`\n];\n\n//language=XML\nconst authorUsage =\n[`<Author id=\"12345\">\n  <Name>My Name</Name>\n  <Url>https://example.com/author</Url>\n</Author>`];\n\n//language=XML\nconst buttonUsage = [\n  `<Button target=\"page(2..10)\">Continue</Button>`,\n  `<Button target=\"Saved\" onclick=\"save()\" set=\"flag1,flag2\" unset=\"flag3\" if-set=\"flag4+flag5\" if-not-set=\"flag6\">Save</Button>`\n];\n\n//language=XML\nconst cssUsage = [`<CSS>body {color: white;} .red {color: red;}</CSS>`];\n\n//language=XML\nconst delayUsage = [\n  `<Delay target=\"page(2..10)\" seconds=\"0\" />`,\n  `<Delay target=\"page2\" seconds=\"(5..10)\" style=\"normal\" start-with=\"50\" onTriggered=\"advanceTask()\" />`,\n  `<Delay target=\"page2\" seconds=\"(5..25)\" set=\"flag1,flag2\" unset=\"flag3\" if-set=\"flag4+flag5\" if-not-set=\"flag6\" />`\n];\n\n//language=XML\nconst globalButtonUsage = [\n  `<GlobalButton action=\"add\" id=\"global1\" target=\"start\">Restart</GlobalButton>`,\n  `<GlobalButton action=\"remove\" id=\"global1\" />`\n];\n\n//language=XML\nconst globalJavascriptUsage = [\n  `<GlobalJavascript>\n<![CDATA[\n    function addRestartButton() {\n        overRide.addButton(\"start\", \"Restart\",\"\", \"\", \"\", \"\");\n    }\n]]>\n</GlobalJavascript>`\n];\n\n//language=XML\nconst includeUsage = [`<Pages>\n    <Include file=\"AdditionalPages.xml\" />\n    [...]\n</Pages>`];\n\n//language=XML\nconst imageUsage = [`<Image id=\"img*.jpg\" if-set=\"flag1+flag2\" if-not-set=\"flag3\"/>`];\n\n//language=XML\nconst javascriptUsage = [\n  `<javascript>\n<![CDATA[\n    scriptVars.put(\"name\", \"value\");\n]]>\n</javascript>`];\n\n//language=XML\nconst mediaDirectoryUsage = [`<MediaDirectory>Media</MediaDirectory>`];\n\n//language=XML\nconst metronomeUsage = [\n  `<Metronome bpm=\"60\" />`,\n  `<Metronome bpm=\"60\" beats=\"4\" loops=\"10\" rhythm=\"1,5,9,13,17,21,25,29,33,37,39,41,43,45,47,49,51,53,55,57,59,62,65,69,74,80,81,82,83,84,85,86,87,88,89,90,93,97,98,100,102,104,105,106,126,127,128,129,131,134,139,146\" />`\n];\n\n//language=XML\nconst pageUsage = [`<Page id=\"page1\">\n    [...]\n</Page>`];\n\n//language=XML\nconst pagesUsage = [`<Pages>\n    [...]\n</Pages>`];\n\n//language=XML\nconst prefUsage = [\n  `<pref key=\"pref1\" screen=\"What is preference 1?\" type=\"String\" value=\"Pref One Value\" />`,\n  `<pref key=\"pref1\" screen=\"What is preference 1?\" type=\"String\" value=\"Pref One Value\" sortOrder=\"1\" />`\n];\n\n//language=XML\nconst settingsUsage = [`<Settings>\n    <AutoSetPageWhenSeen>true</AutoSetPageWhenSeen>\n    <PageSound>false</PageSound>\n    <ForceStartPage>true</ForceStartPage>\n</Settings>`];\n\n//language=XML\nconst teaseUsage =\n[`<Tease id=\"12345\" scriptVersion=\"v0.1\" minimumVersion=\"1.2.3\">\n  [...]\n</Tease>`];\n\nconst sharedTextUsage = `\n  <p>My name is\n    <span>myName</span>\n  </p>\n  <p>\n    <u>underlined text</u>\n  </p>\n  <p>\n    <em>\n      <b>bold and italic text</b>\n    </em>\n  </p>\n  <p>\n    <font color=\"green\">coloured text</font>\n  </p>\n  <p>\n    <font size=\"+1\" style=\"font-family:'Courier New', Courier, monospace\">different font</font>\n  </p>\n  <p>\n    <a href=\"http://google.com\" target=\"_blank\">google.com</a>\n  </p>\n  <form>\n    <p>Choose your sex:</p>\n    <input type=\"radio\" name=\"sex\" value=\"male\" checked=\"checked\"/>Male\n    <input type=\"radio\" name=\"sex\" value=\"female\"/>Female\n    <p>Choose your Toys:</p>\n    <input type=\"checkbox\" name=\"toy1\" checked=\"checked\"/>Toy 1\n    <input type=\"checkbox\" name=\"toy2\"/>Toy 2\n    <p>Choose your Nickname:</p>\n    <input type=\"text\" name=\"nickname\" value=\"My Nickname\"/>\n    <p>Choose your Difficulty:</p>\n    <select name=\"difficulty\">\n      <option value=\"easy\">Easy</option>\n      <option value=\"normal\">Normal</option>\n      <option value=\"hard\">Hard</option>\n    </select>\n  </form>`;\nconst textUsage = [`<Text>${sharedTextUsage}</Text>`];\nconst leftTextUsage = [`<LeftText>${sharedTextUsage}</LeftText>`];\n\n//language=XML\nconst timerUsage = [\n  `<Timer seconds=\"10\" imageId=\"image1.jpg\" />`,\n  `<Timer seconds=\"10\" imageId=\"image1.jpg\">This text will appear on the right side</Timer>`\n];\n\n//language=XML\nconst titleUsage = [`<Title>My Tease Title</Title>`];\n\n//language=XML\nconst urlUsage = [`<Url>https://example.com/myFancyTease</Url>`];\n\n//language=XML\nconst videoUsage = [\n  `<Video id=\"video.mp4\" />`,\n  `<Video id=\"video.flv\" start-at=\"00:01:00\" stop-at=\"00:01:30\" onTriggered=\"videoP6()\" target=\"Page7\" />`\n];\n\n//language=HTML\nconst targetFormat = <span>page1<br/>page(1..5)</span>;\n\nconst audioAttributes = [\n  {\n    name: \"id\",\n    required: true,\n    format: <span>music1.mp3<br/>music*.mp3<br/>musicDir</span>,\n    description:\n      <span>Name of the file to play. Allows wildcards (*) and directories. All paths are relative to <code>MediaDirectory</code>.</span>\n  },\n  {\n    name: \"if-set\",\n    required: false,\n    format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n    description: \"Only play this file if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n  },\n  {\n    name: \"if-not-set\",\n    required: false,\n    format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n    description: \"Only play this file if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n  },\n  {\n    name: \"start-at\",\n    required: false,\n    format: \"00:01:10\",\n    description: \"Time to start playing the file at.\"\n  },\n  {\n    name: \"stop-at\",\n    required: false,\n    format: \"00:02:30\",\n    description: \"Time to stop playing the file at.\"\n  },\n  {\n    name: \"target\",\n    required: false,\n    format: \"page1\",\n    description: \"Page to navigate to when this file has finished playing.\"\n  },\n  {\n    name: \"loops\",\n    required: false,\n    format: \"2\",\n    description: \"Number of times to play the file.\"\n  },\n  {\n    name: \"onTriggered\",\n    required: false,\n    format: \"myFunction()\",\n    description: \"JavaScript action to execute when this file has finished playing.\"\n  },\n  {\n    name: \"if-before\",\n    required: false,\n    format: \"13:30\",\n    description: \"Time of day (hh:mm) the audio will only be played before.\"\n  },\n  {\n    name: \"if-after\",\n    required: false,\n    format: \"13:30\",\n    description: \"Time of day (hh:mm) the audio will only be played after.\"\n  },\n  {\n    name: \"scriptVar\",\n    required: false,\n    format: \"sVar1=Fred,sVar2=10\",\n    description: \"Comma separated list of script variables to set.\"\n  },\n  {\n    name: \"volume\",\n    required: false,\n    format: \"100\",\n    description: \"0 to 100, percent of normal volume.\"\n  }\n];\n\nconst buttonAttributes = [\n  {\n    name: \"target\",\n    required: true,\n    removed: \"0.4.2\",\n    format: targetFormat,\n    description: \"Page to navigate to when this button is clicked. Ranges are also allowed. Requirement removed in GuideMe v0.4.2.\"\n  },\n  {\n    name: \"target\",\n    required: false,\n    minVersion: \"0.4.2\",\n    format: targetFormat,\n    description: \"Page to navigate to when this button is clicked. Ranges are also allowed. No longer required as of GuideMe v0.4.2 to allow for JS-only buttons.\"\n  },\n  {\n    name: \"set\",\n    required: false,\n    format: <span>1<br/>1,2,3<br/></span>,\n    description: \"Flags to set when this button is clicked.\"\n  },\n  {\n    name: \"unset\",\n    required: false,\n    format: <span>1<br/>1,2,3<br/></span>,\n    description: \"Flags to unset when this button is clicked.\"\n  },\n  {\n    name: \"if-set\",\n    required: false,\n    format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n    description: \"Only show this button if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n  },\n  {\n    name: \"if-not-set\",\n    required: false,\n    format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n    description: \"Only show this button if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n  },\n  {\n    name: \"if-before\",\n    required: false,\n    format: \"13:30\",\n    description: \"Time of day (hh:mm) the button will only be shown before.\"\n  },\n  {\n    name: \"if-after\",\n    required: false,\n    format: \"13:30\",\n    description: \"Time of day (hh:mm) the button will only be shown after.\"\n  },\n  {\n    name: \"onclick\",\n    required: false,\n    format: \"myFunction()\",\n    description: \"JavaScript action to execute when this button is clicked.\"\n  },\n  {\n    name: \"image\",\n    required: false,\n    format: \"btn1.jpg\",\n    description: \"Image to display on the button.\"\n  },\n  {\n    name: \"hotkey\",\n    required: false,\n    format: \"k\",\n    description: \"Hotkey to bind the button to.\"\n  },\n  {\n    name: \"scriptVar\",\n    required: false,\n    format: \"sVar1=Fred,sVar2=10\",\n    description: \"Comma separated list of script variables to set.\"\n  },\n  {\n    name: \"fontName\",\n    required: false,\n    format: \"Arial\",\n    description: \"Font name to use for button text.\"\n  },\n  {\n    name: \"fontHeight\",\n    required: false,\n    format: \"12\",\n    description: \"Size of the button text.\"\n  },\n  {\n    name: \"bgColor1\",\n    required: false,\n    format: \"red\",\n    description: \"Background color.\"\n  },\n  {\n    name: \"bgColor2\",\n    required: false,\n    format: \"blue\",\n    description: \"Second background color for graduated fill.\"\n  },\n  {\n    name: \"fontColor\",\n    required: false,\n    format: \"black\",\n    description: \"Color of the font in the button.\"\n  },\n  {\n    name: \"sortOrder\",\n    required: false,\n    format: \"1\",\n    description: \"Sort value. Allows buttons on the page to be sorted.\"\n  },\n  {\n    name: \"disabled\",\n    required: false,\n    format: \"false\",\n    description: \"set true to disable the button on page load.\"\n  },\n  {\n    name: \"id\",\n    required: false,\n    format: \"btnOne\",\n    description: \"ID of the button to use when referencing from JavaScript.\"\n  }\n];\n\nconst globalButtonAttributes = [\n  {\n    name: \"id\",\n    required: true,\n    format: \"btnOne\",\n    description: \"ID of the button to use when referencing from JavaScript.\"\n  },\n  {\n    name: \"action\",\n    required: true,\n    format: <span>add<br/>remove</span>,\n    description: \"Whether you are adding or removing this button object. If not provided, button will be ignored.\"\n  },\n  {\n    name: \"placement\",\n    required: false,\n    format: <span>top<br/>bottom</span>,\n    description: \"Whether to place this button at the top or bottom of all other buttons. Defaults to bottom.\"\n  },\n  {\n    name: \"target\",\n    required: false,\n    format: targetFormat,\n    description: \"Page to navigate to when this button is clicked. Ranges are also allowed. No longer required as of GuideMe v0.4.2 to allow for JS-only buttons.\"\n  },\n  {\n    name: \"set\",\n    required: false,\n    format: <span>1<br/>1,2,3<br/></span>,\n    description: \"Flags to set when this button is clicked.\"\n  },\n  {\n    name: \"unset\",\n    required: false,\n    format: <span>1<br/>1,2,3<br/></span>,\n    description: \"Flags to unset when this button is clicked.\"\n  },\n  {\n    name: \"if-set\",\n    required: false,\n    format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n    description: \"Only show this button if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n  },\n  {\n    name: \"if-not-set\",\n    required: false,\n    format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n    description: \"Only show this button if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n  },\n  {\n    name: \"if-before\",\n    required: false,\n    format: \"13:30\",\n    description: \"Time of day (hh:mm) the button will only be shown before.\"\n  },\n  {\n    name: \"if-after\",\n    required: false,\n    format: \"13:30\",\n    description: \"Time of day (hh:mm) the button will only be shown after.\"\n  },\n  {\n    name: \"onclick\",\n    required: false,\n    format: \"myFunction()\",\n    description: \"JavaScript action to execute when this button is clicked.\"\n  },\n  {\n    name: \"image\",\n    required: false,\n    format: \"btn1.jpg\",\n    description: \"Image to display on the button.\"\n  },\n  {\n    name: \"hotkey\",\n    required: false,\n    format: \"k\",\n    description: \"Hotkey to bind the button to.\"\n  },\n  {\n    name: \"scriptVar\",\n    required: false,\n    format: \"sVar1=Fred,sVar2=10\",\n    description: \"Comma separated list of script variables to set.\"\n  },\n  {\n    name: \"fontName\",\n    required: false,\n    format: \"Arial\",\n    description: \"Font name to use for button text.\"\n  },\n  {\n    name: \"fontHeight\",\n    required: false,\n    format: \"12\",\n    description: \"Size of the button text.\"\n  },\n  {\n    name: \"bgColor1\",\n    required: false,\n    format: \"red\",\n    description: \"Background color.\"\n  },\n  {\n    name: \"bgColor2\",\n    required: false,\n    format: \"blue\",\n    description: \"Second background color for graduated fill.\"\n  },\n  {\n    name: \"fontColor\",\n    required: false,\n    format: \"black\",\n    description: \"Color of the font in the button.\"\n  },\n  {\n    name: \"sortOrder\",\n    required: false,\n    format: \"1\",\n    description: \"Sort value. Sorting occurs within other Global Buttons with the same placement.\"\n  },\n  {\n    name: \"disabled\",\n    required: false,\n    format: \"false\",\n    description: \"set true to disable the button on page load.\"\n  }\n];\n\nexport const XmlData = [\n  {\n    name: \"Tease\",\n    required: true,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"N/A\",\n    min: 1,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Primary wrapper node for a tease.</p>\n      <p>This node must be included once and only once in evey tease as the root XML node.</p>\n    </>,\n    usage: teaseUsage,\n    attributes: [\n      {\n        name: \"id\",\n        required: false,\n        format: \"12345\",\n        description: \"Tease ID when downloaded from Milovana. Not required, but helpful to tell users the origin.\"\n      },\n      {\n        name: \"scriptVersion\",\n        required: false,\n        minVersion: null,\n        deprecated: false,\n        removed: null,\n        format: \"v0.1\",\n        description: \"XML script version. Legacy attribute. Always set to \\\"v0.1\\\"if present.\"\n      },\n      {\n        name: \"minimumVersion\",\n        required: false,\n        minVersion: \"0.4.2\",\n        deprecated: false,\n        removed: null,\n        format: \"0.4.2\",\n        description: \"Minimum version of GuideMe this script supports. No \\\"v\\\" prefix!\"\n      }\n    ]\n  },\n  {\n    name: \"Title\",\n    required: true,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 1,\n    max: 1,\n    description: <>\n      <p className=\"lead\">The display name of the tease. Shown at the top of the screen.</p>\n    </>,\n    usage: titleUsage,\n    attributes: []\n  },\n  {\n    name: \"Url\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">URL that the tease was download from or can be found at.</p>\n    </>,\n    usage: urlUsage,\n    attributes: []\n  },\n  {\n    name: \"Author\",\n    required: true,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 1,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Information about the author of the tease.</p>\n      <ul>\n        <li><b>Name</b>: Name of the author <RequiredBadge required=\"true\"/></li>\n        <li><b>Url</b>: URL for the author <RequiredBadge/></li>\n      </ul>\n    </>,\n    usage: authorUsage,\n    attributes: [\n      {\n        name: \"id\",\n        required: false,\n        deprecated: true,\n        format: \"12345\",\n        description: \"ID of the author from Milovana. Used for backwards compatibility with TeaseMe.\"\n      },\n    ]\n  },\n  {\n    name: \"MediaDirectory\",\n    required: true,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 1,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Subdirectory that the media files can be found at. Relative to the current XML file.</p>\n    </>,\n    usage: mediaDirectoryUsage,\n    attributes: []\n  },\n  {\n    name: \"Audio\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Play an audio file using the Audio player.</p>\n    </>,\n    usage: audioUsage,\n    attributes: audioAttributes\n  },\n  {\n    name: \"Audio2\",\n    required: false,\n    minVersion: \"0.4.0\",\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: 1,\n    description: <>\n        <p className=\"lead\">Play an audio file using the Audio2 player.</p>\n        <p>Audio2 is functionally identical\n          to <code>Audio</code> but allows for a\n          second concurrent audio file to be played, potentially with a different output device.</p>\n      </>,\n      usage: audio2Usage,\n      attributes: audioAttributes\n    },\n  {\n    name: \"Button\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: <span>&infin;</span>,\n    description: <>\n      <p className=\"lead\">Adds a button to the page.</p>\n    </>,\n    usage: buttonUsage,\n    attributes: buttonAttributes\n  },\n  {\n    name: \"GlobalButton\",\n    required: false,\n    minVersion: \"0.4.2\",\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: <span>&infin;</span>,\n    description: <>\n      <p className=\"lead\">Adds a button to every page.</p>\n    </>,\n    usage: globalButtonUsage,\n    attributes: globalButtonAttributes\n  },\n  {\n    name: \"CSS\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Adds global CSS that can be used in <code>Text</code> nodes.</p>\n    </>,\n    usage: cssUsage,\n    attributes: []\n  },\n  {\n    name: \"Delay\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Adds a delay (countdown) to a page.</p>\n    </>,\n    usage: delayUsage,\n    attributes: [\n      {\n        name: \"target\",\n        required: true,\n        format: targetFormat,\n        description: \"Page to navigate to when delay reaches zero. Ranges are also allowed.\"\n      },\n      {\n        name: \"seconds\",\n        required: true,\n        format: <span>10<br/>(5..10)</span>,\n        description: \"Length of the delay in seconds. Ranges are also allowed.\"\n      },\n      {\n        name: \"style\",\n        required: false,\n        format: \"normal\",\n        description: <span>Style of delay. <code>normal</code> (default), <code>secret</code> (question marks), <code>hidden</code> (invisible).</span>\n      },\n      {\n        name: \"start-with\",\n        required: false,\n        format: \"5\",\n        description: \"Starts the delay with the given number of seconds. length is not changed.\"\n      },\n      {\n        name: \"set\",\n        required: false,\n        format: <span>1<br/>1,2,3<br/></span>,\n        description: \"Flags to set when delay reaches zero.\"\n      },\n      {\n        name: \"unset\",\n        required: false,\n        format: <span>1<br/>1,2,3<br/></span>,\n        description: \"Flags to unset when delay reaches zero.\"\n      },\n      {\n        name: \"if-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Delay is only added if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-not-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Delay is only added if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-before\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the delay will only be used before.\"\n      },\n      {\n        name: \"if-after\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the delay will only be used after.\"\n      },\n      {\n        name: \"scriptVar\",\n        required: false,\n        format: \"sVar1=Fred,sVar2=10\",\n        description: \"Comma separated list of script variables to set.\"\n      },\n      {\n        name: \"onTriggered\",\n        required: false,\n        format: \"myFunction()\",\n        description: \"JavaScript action to execute when delay reaches zero.\"\n      }\n    ]\n  },\n  {\n    name: \"GlobalJavascript\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Adds the provided JavaScript to every page.</p>\n      <p>This is ideal for global function, or functions you want to reuse on multiple pages.</p>\n    </>,\n    usage: globalJavascriptUsage,\n    attributes: []\n  },\n  {\n    name: \"Image\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Adds an image to the page.</p>\n    </>,\n    usage: imageUsage,\n    attributes: [\n      {\n        name: \"id\",\n        required: true,\n        description: <span>Path to the image relative to the Media Directory. Wildcard character <code>*</code> is allowed.</span>,\n        format: <span>img1.jpg<br/>sub1/img1.jpg<br/>img*.jpg</span>\n      },\n      {\n        name: \"if-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Image is only added if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-not-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Image is only added if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-before\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the image will only be shown before.\"\n      },\n      {\n        name: \"if-after\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the image will only be shown after.\"\n      },\n    ]\n  },\n  {\n    name: \"Include\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Pages\",\n    min: 0,\n    max: <span>&infin;</span>,\n    description: <>\n      <p className=\"lead\">Includes an additional XML file.</p>\n      <p>The included file must be in the Media Directory.</p>\n    </>,\n    usage: includeUsage,\n    attributes: [\n      {\n        name: \"file\",\n        required: true,\n        format: \"AdditionalPages.xml\",\n        description: \"Name of the file to include, relative to the Media Directory.\"\n      }\n    ]\n  },\n  {\n    name: \"Javascript\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Includes JavaScript on the current page.</p>\n      <p>Please note, this tag is lowercase!</p>\n    </>,\n    usage: javascriptUsage,\n    attributes: []\n  },\n  {\n    name: \"Metronome\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Plays a metronome sound.</p>\n    </>,\n    usage: metronomeUsage,\n    attributes: [\n      {\n        name: \"bpm\",\n        required: true,\n        format: \"60\",\n        description: \"Beats per minute (absolute or used to set tempo for rhythm.\"\n      },\n      {\n        name: \"beats\",\n        required: false,\n        format: \"4\",\n        description: \"Only used with Rhythm. Number of sub beats.\"\n      },\n      {\n        name: \"loops\",\n        required: false,\n        format: \"10\",\n        description: \"Only used with Rhythm. Number of times to loop the rhythm.\"\n      },\n      {\n        name: \"rhythm\",\n        required: false,\n        format: \"1,5,9,13\",\n        description: <span>Rhythm in sub beats. If bpm=60 and beats=4, we have 1 bar per second with 4 beats per bar, so a beat every 0.25 seconds.<br/>\n          If rhythm=\"1,5,9,13\" we get 4 clicks once per second.<br/>\n          If rhythm=\"1,3,5,7,9,11,13\" we get 7 clicks once every half second.</span>\n      },\n      {\n        name: \"if-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Only enable if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-not-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Only enable if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-before\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the metronome will only be enabled before.\"\n      },\n      {\n        name: \"if-after\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the metronome will only be enabled after.\"\n      },\n    ]\n  },\n  {\n    name: \"Page\",\n    required: true,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Pages\",\n    min: 1,\n    max: <span>&infin;</span>,\n    description: <>\n      <p className=\"lead\">Base node to define a page.</p>\n    </>,\n    usage: pageUsage,\n    attributes: [\n      {\n        name: \"id\",\n        required: true,\n        format: \"page1\",\n        description: \"ID of the page. Must be unique across all pages!\"\n      }\n    ]\n  },\n  {\n    name: \"Pages\",\n    required: true,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 1,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Wrapper for all pages.</p>\n    </>,\n    usage: pagesUsage,\n    attributes: []\n  },\n  {\n    name: \"Settings\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Settings for the tease.</p>\n      <ul>\n        <li><b>AutoSetPageWhenSeen</b>: Adds the page name as a flag when the page is viewed. <RequiredBadge/></li>\n        <li><b>PageSound</b>: Play the page change sound when changing pages. <RequiredBadge/></li>\n        <li><b>ForceStartPage</b>: Force the guide to start on the \"start\" page every time it is loaded. <RequiredBadge/></li>\n      </ul>\n    </>,\n    usage: settingsUsage,\n    attributes: []\n  },\n  {\n    name: \"Pref\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Tease\",\n    min: 0,\n    max: <span>&infin;</span>,\n    description: <>\n      <p className=\"lead\">Guide preferences.</p>\n      <p>Shown in the Guide Preferences screen, and editable via JavaScript.</p>\n      <p>Please note, this tag is lowercase!</p>\n    </>,\n    usage: prefUsage,\n    attributes: [\n      {\n        name: \"key\",\n        required: true,\n        format: \"key\",\n        description: \"Variable name\"\n      },\n      {\n        name: \"type\",\n        required: true,\n        format: <span>boolean<br/>string<br/>number</span>,\n        description: <span>Data type of variable. Valid values are <code>boolean</code>, <code>string</code>, and <code>number</code>.</span>\n      },\n      {\n        name: \"screen\",\n        required: true,\n        format: \"My Setting\",\n        description: \"Display name of this preference in the preferences menu.\"\n      },\n      {\n        name: \"value\",\n        required: true,\n        format: \"value\",\n        description: \"Default value to use if not set be user.\"\n      },\n      {\n        name: \"sortOrder\",\n        required: false,\n        format: \"1\",\n        description: \"Order this preference will appear in the preferences menu.\"\n      }\n    ]\n  },\n  {\n    name: \"Text\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: <span>1 <RemovedBadge version=\"0.4.0\"/><br/>&infin; <MinVersionBadge version=\"0.4.0\"/></span>,\n    description: <>\n      <p className=\"lead\">Text to show on the right pane.</p>\n      <p>Supports HTML and HTML Forms. Use <code>&lt;span&gt;</code> to display JavaScript variables.</p>\n    </>,\n    usage: textUsage,\n    attributes: [\n      {\n        name: \"if-set\",\n        required: false,\n        minVersion: \"0.4.0\",\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Only show this text if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-not-set\",\n        required: false,\n        minVersion: \"0.4.0\",\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Only show this text if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-before\",\n        required: false,\n        minVersion: \"0.4.0\",\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the text will only be shown before.\"\n      },\n      {\n        name: \"if-after\",\n        required: false,\n        minVersion: \"0.4.0\",\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the text will only be shown after.\"\n      }\n    ]\n  },\n  {\n    name: \"LeftText\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: 1,\n    description: <>\n      <p className=\"lead\">Text to show on the left pane instead of an image or video.</p>\n      <p>Supports HTML and HTML Forms. Use <code>&lt;span&gt;</code> to display JavaScript variables.</p>\n    </>,\n    usage: leftTextUsage,\n    attributes: []\n  },\n  {\n    name: \"Timer\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: <span>&infin;</span>,\n    description: <>\n      <p>\n        Creates a timer which results in an action after a number of seconds.\n        Similar to a delay but designed to update the current page not go to a new one.\n      </p>\n      <p>Text within the node will display in the right text pane.</p>\n    </>,\n    usage: timerUsage,\n    attributes: [\n      {\n        name: \"seconds\",\n        required: true,\n        format: <span>10</span>,\n        description: <span>Number of seconds for the timer.</span>\n      },\n      {\n        name: \"if-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Only run this timer if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-not-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Only run this timer if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-before\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the timer will only be run before.\"\n      },\n      {\n        name: \"if-after\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the timer will only be run after.\"\n      },\n      {\n        name: \"set\",\n        required: false,\n        format: <span>1<br/>1,2,3<br/></span>,\n        description: \"Flags to set when timer reaches zero.\"\n      },\n      {\n        name: \"unset\",\n        required: false,\n        format: <span>1<br/>1,2,3<br/></span>,\n        description: \"Flags to unset when timer reaches zero.\"\n      },\n      {\n        name: \"imageId\",\n        required: false,\n        format: \"image1.jpg\",\n        description: \"Image to change to when the timer reaches zero.\"\n      },\n      {\n        name: \"id\",\n        required: false,\n        format: \"1\",\n        description: \"ID of the timer. Used to re-run this timer.\"\n      },\n      {\n        name: \"onTriggered\",\n        required: false,\n        format: \"myFunction()\",\n        description: \"JavaScript action to execute when the timer reaches zero.\"\n      },\n    ]\n  },\n  {\n    name: \"Video\",\n    required: false,\n    minVersion: null,\n    deprecated: false,\n    removed: null,\n    parents: \"Page\",\n    min: 0,\n    max: <span>&infin;</span>,\n    description: <>\n      <p className=\"lead\">Video to show.</p>\n      <p>If more than one video is provided, the first valid one will be played.</p>\n    </>,\n    usage: videoUsage,\n    attributes: [\n      {\n        name: \"id\",\n        required: true,\n        format: <span>video1.mp4<br/>video*.mp4<br/>videoDir</span>,\n        description:\n          <span>Name of the file to play. Allows wildcards (*) and directories. All paths are relative to <code>MediaDirectory</code>.</span>\n      },\n      {\n        name: \"target\",\n        required: false,\n        format: \"page1\",\n        description: \"Page to navigate to when this file has finished playing.\"\n      },\n      {\n        name: \"start-at\",\n        required: false,\n        format: \"00:01:10\",\n        description: \"Time to start playing the file at.\"\n      },\n      {\n        name: \"stop-at\",\n        required: false,\n        format: \"00:02:30\",\n        description: \"Time to stop playing the file at.\"\n      },\n      {\n        name: \"if-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Only play this file if the given flags are set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-not-set\",\n        required: false,\n        format: <span>1<br/>1+2+3<br/>1|2|3</span>,\n        description: \"Only play this file if the given flags are NOT set. \\\"+\\\" indicates AND, \\\"|\\\" indicates OR.\"\n      },\n      {\n        name: \"if-before\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the video will only be played before.\"\n      },\n      {\n        name: \"if-after\",\n        required: false,\n        format: \"13:30\",\n        description: \"Time of day (hh:mm) the video will only be played after.\"\n      },\n      {\n        name: \"loops\",\n        required: false,\n        format: \"2\",\n        description: \"Number of times to play the file.\"\n      },\n      {\n        name: \"onTriggered\",\n        required: false,\n        format: \"myFunction()\",\n        description: \"JavaScript action to execute when this file has finished playing.\"\n      },\n      {\n        name: \"scriptVar\",\n        required: false,\n        format: \"sVar1=Fred,sVar2=10\",\n        description: \"Comma separated list of script variables to set.\"\n      }\n    ]\n  }\n];","import './Sidebar.scss'\n\nimport React, {Component} from \"react\";\nimport {XmlData} from \"./data/XMLData\"\nimport {Col, Container, Jumbotron, Row, Table} from \"react-bootstrap\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport {atomOneLight} from \"react-syntax-highlighter/dist/esm/styles/hljs\"\nimport {DeprecatedBadge, MinVersionBadge, RemovedBadge, RequiredBadge} from \"./Badges\";\nimport {VscCircleFilled, VscCircleOutline} from \"react-icons/all\";\n\nfunction AttributesTable(props) {\n  if (!props.attributes || props.attributes.length === 0) {\n    return null\n  }\n  return (\n    <>\n      <h2 className=\"h3\">Supported Attributes</h2>\n      <Table size=\"sm\" variant=\"flex\">\n        <thead>\n        <tr>\n          <th style={{\"minWidth\": \"150px\"}}>Attribute</th>\n          <th style={{\"minWidth\": \"100px\"}}>Required</th>\n          <th style={{\"minWidth\": \"120px\"}}>Examples</th>\n          <th style={{\"width\": \"100%\"}}>Description</th>\n        </tr>\n        </thead>\n        <tbody>\n        {props.attributes.map((attr, idx) => {\n          return (\n            <tr key={attr.name + idx.toString()}>\n              <td className=\"text-monospace\">\n                {attr.name}\n                <MinVersionBadge version={attr.minVersion}/>\n                <DeprecatedBadge deprecated={attr.deprecated}/>\n                <RemovedBadge version={attr.removed}/>\n              </td>\n              <td>\n                <RequiredBadge required={attr.required}/>\n              </td>\n              <td className=\"text-monospace\">{attr.format}</td>\n              <td>{attr.description}</td>\n            </tr>\n          );\n        })}\n        </tbody>\n      </Table>\n    </>);\n}\n\nfunction RequirementsTable(props) {\n  return (\n    <>\n      <h2 className=\"h3 mt-3\">Requirements</h2>\n      <Row>\n        <Col xs=\"12\" sm=\"8\" md=\"8\" lg=\"7\" xl=\"5\">\n          <Table bordered size=\"sm\">\n            <thead>\n              <tr>\n                <th>Parent</th>\n                <th>Min</th>\n                <th>Max</th>\n                <th>Usage</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{props.node.parents}</td>\n                <td>{props.node.min}</td>\n                <td>{props.node.max}</td>\n                <td><RequiredBadge required={props.node.required}/></td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </>)\n}\n\nfunction SidebarNavLinks() {\n  return XmlData.sort((a, b) => a.name.localeCompare(b.name)).map(node => (\n    <li key={node.name} className=\"nav-item\">\n\n      <a className=\"nav-link\" href={\"#\" + node.name}>\n        <span className=\"sidebar-icon\">{node.required ? <VscCircleFilled/> : <VscCircleOutline/>}</span>{node.name}</a>\n    </li>\n  ));\n}\n\nexport default class XMLDocumentation extends Component {\n  componentDidMount() {\n    let location = window.location.href;\n    if (location.includes('#')) {\n      let id = location.split('#')[1];\n      let elem = document.getElementById(id);\n      if (elem) {\n        elem.scrollIntoView();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Container fluid>\n          <Row>\n            <nav className=\"col-md-3 col-lg-2 d-none d-md-block bg-light sidebar text-dark\">\n              <div className=\"sidebar-sticky\">\n                <h6\n                  className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                  <span>Available XML Tags</span>\n                </h6>\n                <ul className=\"nav flex-column\">\n                  <SidebarNavLinks/>\n                </ul>\n              </div>\n            </nav>\n            <main className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n              <Jumbotron className=\"pt-5\">\n                <Col className=\"mx-auto\">\n                  <h1 className=\"display-3\">XML Syntax Documentation</h1>\n                  <p className=\"lead\">\n                    Documentation of the XML Tease files.\n                  </p>\n                  <p className=\"lead\">\n                    Throughout this page, you'll see several badges alongside XML tags and attributes you should be\n                    familiar\n                    with.\n                  </p>\n                  <ul className=\"lead\">\n                    <li>Requirements will be indicated by a <RequiredBadge required={true}/> or <RequiredBadge required={false}/>  badge.\n                      Required nodes have a filled dot in the left navigation, while optional nodes have an open dot.\n                    </li>\n                    <li>New elements will have a badge indicating the minimum required GuideMe\n                      version <MinVersionBadge version=\"1.2.3\"/></li>\n                    <li>Deprecated elements will have a deprecated badge <DeprecatedBadge deprecated/></li>\n                    <li>Elements that have been removed will have a badge indicating the version they were\n                      removed in <RemovedBadge version=\"1.2.3\"/></li>\n                  </ul>\n                  <p className=\"lead\">\n                    Examples may demonstrate features not present in all versions of GuideMe. Please check for badges\n                    in the title and supported attributes to ensure your XML will work with your intended software version(s).\n                  </p>\n                </Col>\n              </Jumbotron>\n              {XmlData.sort((a, b) => a.name.localeCompare(b.name)).map(node => {\n                return (\n                  <div key={node.name}>\n                    <div className=\"border-bottom d-block mt-5\">\n                      <h1 className=\"d-inline\" id={node.name}>{node.name}</h1>\n                      <MinVersionBadge version={node.minVersion} className=\"badge badge-info ml-2 mb-1 align-text-top\" />\n                      <DeprecatedBadge deprecated={node.deprecated} className=\"badge badge-warning ml-2 mb-1 align-text-top\" />\n                      <RemovedBadge version={node.removed} className=\"badge badge-danger ml-2 mb-1 align-text-top\" />\n                    </div>\n                    {node.description}\n                    <RequirementsTable node={node}/>\n                    <AttributesTable attributes={node.attributes}/>\n                    <h2 className=\"h3\">Usage Examples</h2>\n                    {node.usage.map((usage, idx) => {\n                      return(\n                        <SyntaxHighlighter key={idx} language=\"xml\" style={atomOneLight}>\n                          {usage}\n                        </SyntaxHighlighter>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </main>\n          </Row>\n        </Container>\n      </>);\n  };\n}","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss';\n\nimport 'jquery/dist/jquery.min'\nimport 'popper.js/dist/popper.min'\nimport 'bootstrap/dist/js/bootstrap.min'\n\nimport React from \"react\";\nimport Navigation from \"./Navigation\";\nimport Home from \"./Home\";\nimport XMLDocumentation from \"./documentation/XMLDocumentation\";\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nfunction NotFound() {\n  return (\n    <div className=\"page-wrap d-flex flex-row align-items-center\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col className=\"text-center\">\n            <span className=\"display-1 d-block\">404</span>\n            <div className=\"mb-4 lead\">The page you are looking for does not exist</div>\n            <Link to=\"/\" className=\"btn btn-outline-secondary\">Go Home</Link>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navigation/>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/docs/xml\" component={XMLDocumentation} />\n          <Route exact path=\"/docs/js\">\n            <Container>\n              <h1>Coming Soon!</h1>\n            </Container>\n          </Route>\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}